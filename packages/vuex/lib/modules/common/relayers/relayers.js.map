{"version":3,"sources":["../../../../src/modules/common/relayers/relayers.js"],"names":["ibcRegistry","Registry","defaultRegistryTypes","MsgCreateClient","MsgUpdateClient","MsgConnectionOpenInit","MsgConnectionOpenTry","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgChannelOpenInit","MsgChannelOpenTry","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgRecvPacket","MsgAcknowledgement","MsgTimeout","MsgTransfer","namespaced","state","relayers","JSON","parse","window","localStorage","getItem","transientLog","msg","relayerLinks","getters","getRelayer","name","find","x","getRelayers","getRelayerLink","mutations","SET_RELAYERS","CREATE_RELAYER","relayer","LINK_RELAYER","link","linkDetails","relayerIndex","findIndex","status","CONNECT_RELAYER","channelDetails","RUN_RELAYER","running","STOP_RELAYER","SET_LOG_MSG","message","LAST_QUERIED_HEIGHTS","heights","actions","init","commit","rootGetters","dispatch","forEach","createRelayer","prefix","endpoint","gasPrice","DirectSecp256k1HdWallet","fromMnemonic","signerB","getAccounts","accountB","targetAddress","address","root","loadRelayer","SpVuexError","signerA","accountA","info","error","warn","verbose","debug","optionsA","logger","GasPrice","fromString","registry","Tendermint34Client","connect","tmClientA","signingClientA","StarportSigningClient","getChainId","chainIdA","optionsB","tmClientB","signingClientB","chainIdB","clientA","IbcClient","clientB","Link","createWithExistingConnections","endA","connectionID","endB","linkData","clientID","linkRelayer","createWithNewConnections","connectRelayer","relayerLink","createChannel","channels","channelData","runRelayer","poll","maxAgeDest","maxAgeSrc","stopRelayer","relayerLoop","options","nextRelay","checkAndRelayPacketsAndAcks","updateClientIfStale","console"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AASA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAASA,WAAT,GAAuB;AACrB,SAAO,IAAIC,sBAAJ,8BACFC,8BADE,IAEL,CAAC,qCAAD,EAAwCC,oBAAxC,CAFK,EAGL,CAAC,qCAAD,EAAwCC,oBAAxC,CAHK,EAIL,CAAC,+CAAD,EAAkDC,0BAAlD,CAJK,EAKL,CAAC,8CAAD,EAAiDC,yBAAjD,CALK,EAML,CAAC,8CAAD,EAAiDC,yBAAjD,CANK,EAOL,CACE,kDADF,EAEEC,6BAFF,CAPK,EAWL,CAAC,yCAAD,EAA4CC,uBAA5C,CAXK,EAYL,CAAC,wCAAD,EAA2CC,sBAA3C,CAZK,EAaL,CAAC,wCAAD,EAA2CC,sBAA3C,CAbK,EAcL,CAAC,4CAAD,EAA+CC,0BAA/C,CAdK,EAeL,CAAC,oCAAD,EAAuCC,kBAAvC,CAfK,EAgBL,CAAC,yCAAD,EAA4CC,uBAA5C,CAhBK,EAiBL,CAAC,iCAAD,EAAoCC,eAApC,CAjBK,EAkBL,CAAC,2CAAD,EAA8CC,eAA9C,CAlBK,GAAP;AAoBD;;eAEc;AACdC,EAAAA,UAAU,EAAE,IADE;AAEdC,EAAAA,KAFc,mBAEN;AACP,WAAO;AACNC,MAAAA,QAAQ,EAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,KAAuD,EAD1D;AAENC,MAAAA,YAAY,EAAE;AACbC,QAAAA,GAAG,EAAE;AADQ,OAFR;AAKNC,MAAAA,YAAY,EAAC;AALP,KAAP;AAOA,GAVa;AAWdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACX,KAAD;AAAA,aAAW,UAACY,IAAD,EAAU;AAChC,eAAOZ,KAAK,CAACC,QAAN,CAAeY,IAAf,CAAoB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,SAArB,CAAP;AACA,OAFW;AAAA,KADJ;AAIRG,IAAAA,WAAW,EAAE,qBAACf,KAAD;AAAA,aAAWA,KAAK,CAACC,QAAjB;AAAA,KAJL;AAKRe,IAAAA,cAAc,EAAE,wBAAChB,KAAD;AAAA,aAAW,UAACY,IAAD,EAAU;AACpC,eAAOZ,KAAK,CAACS,YAAN,CAAmBG,IAAnB,CAAP;AACA,OAFe;AAAA;AALR,GAXK;AAoBdK,EAAAA,SAAS,EAAE;AACVC,IAAAA,YADU,wBACGlB,KADH,EACSC,QADT,EACmB;AAC5BD,MAAAA,KAAK,CAACC,QAAN,GAAeA,QAAf;AACA,KAHS;AAIVkB,IAAAA,cAJU,0BAIKnB,KAJL,EAIWoB,OAJX,EAIoB;AAC7BpB,MAAAA,KAAK,CAACC,QAAN,gCAAqBD,KAAK,CAACC,QAA3B,IAAoCmB,OAApC;AACA,KANS;AAOVC,IAAAA,YAPU,wBAOGrB,KAPH,QAOuC;AAAA,UAA7BY,IAA6B,QAA7BA,IAA6B;AAAA,UAAvBU,IAAuB,QAAvBA,IAAuB;AAAA,UAAdC,WAAc;;AAChD,UAAIC,YAAY,GAAGxB,KAAK,CAACC,QAAN,CAAewB,SAAf,CAAyB,UAAAX,CAAC;AAAA,eAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,OAA1B,CAAnB;AACAZ,MAAAA,KAAK,CAACC,QAAN,CAAeuB,YAAf;AAA8BE,QAAAA,MAAM,EAAE;AAAtC,SAAmD1B,KAAK,CAACC,QAAN,CAAeuB,YAAf,CAAnD,GAAmFD,WAAnF;AACAvB,MAAAA,KAAK,CAACS,YAAN,CAAmBG,IAAnB,IAAyBU,IAAzB;AACA,KAXS;AAYVK,IAAAA,eAZU,2BAYM3B,KAZN,SAYwC;AAAA,UAA1BY,IAA0B,SAA1BA,IAA0B;AAAA,UAAjBgB,cAAiB;;AACjD,UAAIJ,YAAY,GAAGxB,KAAK,CAACC,QAAN,CAAewB,SAAf,CAAyB,UAAAX,CAAC;AAAA,eAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,OAA1B,CAAnB;AACAZ,MAAAA,KAAK,CAACC,QAAN,CAAeuB,YAAf;AAA8BE,QAAAA,MAAM,EAAE;AAAtC,SAAsD1B,KAAK,CAACC,QAAN,CAAeuB,YAAf,CAAtD,GAAsFI,cAAtF;AACA,KAfS;AAgBVC,IAAAA,WAhBU,uBAgBE7B,KAhBF,EAgBSY,IAhBT,EAgBe;AACxBZ,MAAAA,KAAK,CAACC,QAAN,CAAeY,IAAf,CAAoB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,OAArB,EAAuCkB,OAAvC,GAA+C,IAA/C;AACA,KAlBS;AAmBVC,IAAAA,YAnBU,wBAmBG/B,KAnBH,EAmBUY,IAnBV,EAmBgB;AACzBZ,MAAAA,KAAK,CAACC,QAAN,CAAeY,IAAf,CAAoB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,OAArB,EAAuCkB,OAAvC,GAA+C,KAA/C;AACA,KArBS;AAsBVE,IAAAA,WAtBU,uBAsBEhC,KAtBF,EAsBSQ,GAtBT,EAsBc;AACvBR,MAAAA,KAAK,CAACO,YAAN,CAAmB0B,OAAnB,GAA2BzB,GAA3B;AACA,KAxBS;AAyBV0B,IAAAA,oBAzBU,gCAyBWlC,KAzBX,SAyBkC;AAAA,UAAfY,IAAe,SAAfA,IAAe;AAAA,UAAVuB,OAAU,SAAVA,OAAU;AAC3CnC,MAAAA,KAAK,CAACC,QAAN,CAAeY,IAAf,CAAoB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,IAAF,IAAQA,IAAZ;AAAA,OAArB,EAAuCuB,OAAvC,GAA+CA,OAA/C;AACA;AA3BS,GApBG;AAiDdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,IADQ,uBAC4B;AAAA,UAA9BC,MAA8B,SAA9BA,MAA8B;AAAA,UAAvBC,WAAuB,SAAvBA,WAAuB;AAAA,UAAXC,QAAW,SAAXA,QAAW;AACnC,UAAMvC,QAAQ,GAACsC,WAAW,CAAC,wBAAD,CAA1B;AACAD,MAAAA,MAAM,CAAC,cAAD,EAAgBrC,QAAhB,CAAN;AACAA,MAAAA,QAAQ,CAACwC,OAAT,CAAiB,UAACrB,OAAD,EAAY;AAC5B,YAAIA,OAAO,CAACM,MAAR,IAAgB,QAAhB,IAA4BN,OAAO,CAACM,MAAR,IAAgB,WAAhD,EAA6D;AAC5Dc,UAAAA,QAAQ,CAAC,aAAD,EAAepB,OAAO,CAACR,IAAvB,CAAR;AACA;AACD,OAJD;AAKA,KATO;AAUF8B,IAAAA,aAVE,uCAUiF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAApEJ,gBAAAA,MAAoE,SAApEA,MAAoE,EAA5DC,WAA4D,SAA5DA,WAA4D,EAA/CC,QAA+C,SAA/CA,QAA+C;AAAnC5B,gBAAAA,IAAmC,SAAnCA,IAAmC,EAA7B+B,MAA6B,SAA7BA,MAA6B,EAArBC,QAAqB,SAArBA,QAAqB,EAAXC,QAAW,SAAXA,QAAW;AACpFzB,gBAAAA,OADoF,GAC1E;AACbR,kBAAAA,IAAI,EAAJA,IADa;AACR+B,kBAAAA,MAAM,EAANA,MADQ;AACDC,kBAAAA,QAAQ,EAARA,QADC;AACQC,kBAAAA,QAAQ,EAARA,QADR;AAEbnB,kBAAAA,MAAM,EAAE,SAFK;AAGbS,kBAAAA,OAAO,EAAE,EAHI;AAIbL,kBAAAA,OAAO,EAAE;AAJI,iBAD0E;AAAA;AAAA,uBAQlEgB,sCAAwBC,YAAxB,CAAqCR,WAAW,CAAC,2BAAD,CAAhD,EACrB,0BAAaA,WAAW,CAAC,uBAAD,CAAxB,CADqB,EAErBI,MAFqB,CARkE;;AAAA;AAQlFK,gBAAAA,OARkF;AAAA;AAAA,uBAY/DA,OAAO,CAACC,WAAR,EAZ+D;;AAAA;AAAA;AAAA;AAYjFC,gBAAAA,QAZiF;AAaxF9B,gBAAAA,OAAO,CAAC+B,aAAR,GAAsBD,QAAQ,CAACE,OAA/B;AACAd,gBAAAA,MAAM,CAAC,gBAAD,EAAkBlB,OAAlB,CAAN;AACAoB,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;;AAfwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBxF,KA1BO;AA2BFC,IAAAA,WA3BE,qCA2B0D;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA/ChB,gBAAAA,MAA+C,SAA/CA,MAA+C,EAAvCC,WAAuC,SAAvCA,WAAuC,EAA1B7B,OAA0B,SAA1BA,OAA0B,EAAlB8B,QAAkB,SAAlBA,QAAkB;AAAP5B,gBAAAA,IAAO,SAAPA,IAAO;AAC3DQ,gBAAAA,OAD2D,GACnDV,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAtB,CADmD;;AAAA,sBAE7DQ,OAAO,CAACM,MAAR,KAAiB,QAAjB,IAA6BN,OAAO,CAACM,MAAR,KAAiB,WAFe;AAAA;AAAA;AAAA;;AAAA,sBAG1D,IAAI6B,uBAAJ,CACL,yBADK,EAEL,4BAFK,CAH0D;;AAAA;AAAA;AAAA;AAAA,uBAS1CT,sCAAwBC,YAAxB,CAAqCR,WAAW,CAAC,2BAAD,CAAhD,EACtB,0BAAaA,WAAW,CAAC,uBAAD,CAAxB,CADsB,EAEtBA,WAAW,CAAC,uBAAD,CAFW,CAT0C;;AAAA;AAS1DiB,gBAAAA,OAT0D;AAAA;AAAA,uBAa1CV,sCAAwBC,YAAxB,CAAqCR,WAAW,CAAC,2BAAD,CAAhD,EACtB,0BAAaA,WAAW,CAAC,uBAAD,CAAxB,CADsB,EAEtBnB,OAAO,CAACuB,MAFc,CAb0C;;AAAA;AAa1DK,gBAAAA,OAb0D;AAAA;AAAA,uBAiBvCQ,OAAO,CAACP,WAAR,EAjBuC;;AAAA;AAAA;AAAA;AAiBzDQ,gBAAAA,QAjByD;AAAA;AAAA,uBAkBvCT,OAAO,CAACC,WAAR,EAlBuC;;AAAA;AAAA;AAAA;AAkBzDC,gBAAAA,QAlByD;AAmBzD3C,gBAAAA,YAnByD,GAmB1C;AACrBmD,kBAAAA,IAAI,EAAE,cAAClD,GAAD,EAAS;AACd8B,oBAAAA,MAAM,CAAC,aAAD,EAAe9B,GAAf,CAAN;AACA,mBAHoB;AAIrBmD,kBAAAA,KAAK,EAAE,iBAAM,CAEZ,CANoB;AAOrBC,kBAAAA,IAAI,EAAE,gBAAM,CAEX,CAToB;AAUrBC,kBAAAA,OAAO,EAAE,mBAAM,CAEd,CAZoB;AAarBC,kBAAAA,KAAK,EAAE,iBAAM,CAEZ;AAfoB,iBAnB0C;AAoC1DC,gBAAAA,QApC0D,GAoC/C;AAChBpB,kBAAAA,MAAM,EAAEJ,WAAW,CAAC,uBAAD,CADH;AAEhByB,kBAAAA,MAAM,EAAEzD,YAFQ;AAGhBsC,kBAAAA,QAAQ,EAAEoB,oBAASC,UAAT,CAAoB,iBAApB,CAHM;AAIhBC,kBAAAA,QAAQ,EAAErF,WAAW;AAJL,iBApC+C;AAAA;AAAA,uBA0CxCsF,kCAAmBC,OAAnB,CACvB9B,WAAW,CAAC,0BAAD,CADY,CA1CwC;;AAAA;AA0C1D+B,gBAAAA,SA1C0D;AA6C1DC,gBAAAA,cA7C0D,GA6CzC,IAAIC,iCAAJ,CACtBF,SADsB,EAEtBd,OAFsB,EAGtBO,QAHsB,CA7CyC;AAAA;AAAA,uBAkDzCQ,cAAc,CAACE,UAAf,EAlDyC;;AAAA;AAkD1DC,gBAAAA,QAlD0D;AAmD1DC,gBAAAA,QAnD0D,GAmD/C;AAChBhC,kBAAAA,MAAM,EAAEvB,OAAO,CAACuB,MADA;AAEhBqB,kBAAAA,MAAM,EAAEzD,YAFQ;AAGhBsC,kBAAAA,QAAQ,EAAEoB,oBAASC,UAAT,CAAoB9C,OAAO,CAACyB,QAA5B,CAHM;AAIhBsB,kBAAAA,QAAQ,EAAErF,WAAW;AAJL,iBAnD+C;AAAA;AAAA,uBAyDxCsF,kCAAmBC,OAAnB,CACvBjD,OAAO,CAACwB,QADe,CAzDwC;;AAAA;AAyD1DgC,gBAAAA,SAzD0D;AA4D1DC,gBAAAA,cA5D0D,GA4DzC,IAAIL,iCAAJ,CACtBI,SADsB,EAEtB5B,OAFsB,EAGtB2B,QAHsB,CA5DyC;AAAA;AAAA,uBAiEzCE,cAAc,CAACJ,UAAf,EAjEyC;;AAAA;AAiE1DK,gBAAAA,QAjE0D;AAmE5DC,gBAAAA,OAnE4D,GAmElD,IAAIC,oBAAJ,CACbT,cADa,EAEbD,SAFa,EAGbb,QAAQ,CAACL,OAHI,EAIbsB,QAJa,EAKbX,QALa,CAnEkD;AA0E5DkB,gBAAAA,OA1E4D,GA0ElD,IAAID,oBAAJ,CACbH,cADa,EAEbD,SAFa,EAGb1B,QAAQ,CAACE,OAHI,EAIb0B,QAJa,EAKbH,QALa,CA1EkD;AAAA;AAAA,uBAiF7CO,gBAAKC,6BAAL,CAAmCJ,OAAnC,EAA4CE,OAA5C,EAAoD7D,OAAO,CAACgE,IAAR,CAAaC,YAAjE,EAA8EjE,OAAO,CAACkE,IAAR,CAAaD,YAA3F,CAjF6C;;AAAA;AAiF1D/D,gBAAAA,IAjF0D;AAkF1DiE,gBAAAA,QAlF0D,GAkF/C;AAChB3E,kBAAAA,IAAI,EAAJA,IADgB;AAEhBU,kBAAAA,IAAI,EAAJA,IAFgB;AAGhBoD,kBAAAA,QAAQ,EAARA,QAHgB;AAIhBI,kBAAAA,QAAQ,EAARA,QAJgB;AAKhBM,kBAAAA,IAAI,EAAE;AACLI,oBAAAA,QAAQ,EAAElE,IAAI,CAAC8D,IAAL,CAAUI,QADf;AAELH,oBAAAA,YAAY,EAAE/D,IAAI,CAAC8D,IAAL,CAAUC;AAFnB,mBALU;AAShBC,kBAAAA,IAAI,EAAE;AACLE,oBAAAA,QAAQ,EAAElE,IAAI,CAACgE,IAAL,CAAUE,QADf;AAELH,oBAAAA,YAAY,EAAE/D,IAAI,CAACgE,IAAL,CAAUD;AAFnB;AATU,iBAlF+C;AAgGhE/C,gBAAAA,MAAM,CAAC,cAAD,EAAgBiD,QAAhB,CAAN;AACA/C,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;;AAjGgE,sBAkG5DjC,OAAO,CAACM,MAAR,IAAgB,WAlG4C;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAmGzDc,QAAQ,CAAC,gBAAD,EAAkBpB,OAAO,CAACR,IAA1B,CAnGiD;;AAAA;AAAA;AAAA;;AAAA;AAqG/D,oBAAIQ,OAAO,CAACU,OAAZ,EAAqB;AACpBU,kBAAAA,QAAQ,CAAC,YAAD,EAAcpB,OAAO,CAACR,IAAtB,CAAR;AACA;;AAvG8D;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6GjE,KAxIO;AAyIF6E,IAAAA,WAzIE,sCAyI0D;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA/CnD,gBAAAA,MAA+C,SAA/CA,MAA+C,EAAvCC,WAAuC,SAAvCA,WAAuC,EAA1B7B,OAA0B,SAA1BA,OAA0B,EAAlB8B,QAAkB,SAAlBA,QAAkB;AAAP5B,gBAAAA,IAAO,UAAPA,IAAO;AAC3DQ,gBAAAA,OAD2D,GACnDV,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAtB,CADmD;;AAAA,sBAE7DQ,OAAO,CAACM,MAAR,KAAiB,SAF4C;AAAA;AAAA;AAAA;;AAAA,sBAG1D,IAAI6B,uBAAJ,CACL,yBADK,EAEL,4BAFK,CAH0D;;AAAA;AAAA;AAAA;AAAA,uBAS1CT,sCAAwBC,YAAxB,CAAqCR,WAAW,CAAC,2BAAD,CAAhD,EACtB,0BAAaA,WAAW,CAAC,uBAAD,CAAxB,CADsB,EAEtBA,WAAW,CAAC,uBAAD,CAFW,CAT0C;;AAAA;AAS1DiB,gBAAAA,OAT0D;AAAA;AAAA,uBAa1CV,sCAAwBC,YAAxB,CAAqCR,WAAW,CAAC,2BAAD,CAAhD,EACtB,0BAAaA,WAAW,CAAC,uBAAD,CAAxB,CADsB,EAEtBnB,OAAO,CAACuB,MAFc,CAb0C;;AAAA;AAa1DK,gBAAAA,OAb0D;AAAA;AAAA,uBAiBvCQ,OAAO,CAACP,WAAR,EAjBuC;;AAAA;AAAA;AAAA;AAiBzDQ,gBAAAA,QAjByD;AAAA;AAAA,uBAkBvCT,OAAO,CAACC,WAAR,EAlBuC;;AAAA;AAAA;AAAA;AAkBzDC,gBAAAA,QAlByD;AAmBzD3C,gBAAAA,YAnByD,GAmB1C;AACrBmD,kBAAAA,IAAI,EAAE,cAAClD,GAAD,EAAS;AACd8B,oBAAAA,MAAM,CAAC,aAAD,EAAe9B,GAAf,CAAN;AACA,mBAHoB;AAIrBmD,kBAAAA,KAAK,EAAE,iBAAM,CAEZ,CANoB;AAOrBC,kBAAAA,IAAI,EAAE,gBAAM,CAEX,CAToB;AAUrBC,kBAAAA,OAAO,EAAE,mBAAM,CAEd,CAZoB;AAarBC,kBAAAA,KAAK,EAAE,iBAAM,CAEZ;AAfoB,iBAnB0C;AAoC1DC,gBAAAA,QApC0D,GAoC/C;AAChBpB,kBAAAA,MAAM,EAAEJ,WAAW,CAAC,uBAAD,CADH;AAEhByB,kBAAAA,MAAM,EAAEzD,YAFQ;AAGhBsC,kBAAAA,QAAQ,EAAEoB,oBAASC,UAAT,CAAoB,iBAApB,CAHM;AAIhBC,kBAAAA,QAAQ,EAAErF,WAAW;AAJL,iBApC+C;AAAA;AAAA,uBA0CxCsF,kCAAmBC,OAAnB,CACvB9B,WAAW,CAAC,0BAAD,CADY,CA1CwC;;AAAA;AA0C1D+B,gBAAAA,SA1C0D;AA6C1DC,gBAAAA,cA7C0D,GA6CzC,IAAIC,iCAAJ,CACtBF,SADsB,EAEtBd,OAFsB,EAGtBO,QAHsB,CA7CyC;AAAA;AAAA,uBAkDzCQ,cAAc,CAACE,UAAf,EAlDyC;;AAAA;AAkD1DC,gBAAAA,QAlD0D;AAmD1DC,gBAAAA,QAnD0D,GAmD/C;AAChBhC,kBAAAA,MAAM,EAAEvB,OAAO,CAACuB,MADA;AAEhBqB,kBAAAA,MAAM,EAAEzD,YAFQ;AAGhBsC,kBAAAA,QAAQ,EAAEoB,oBAASC,UAAT,CAAoB9C,OAAO,CAACyB,QAA5B,CAHM;AAIhBsB,kBAAAA,QAAQ,EAAErF,WAAW;AAJL,iBAnD+C;AAAA;AAAA,uBAyDxCsF,kCAAmBC,OAAnB,CACvBjD,OAAO,CAACwB,QADe,CAzDwC;;AAAA;AAyD1DgC,gBAAAA,SAzD0D;AA4D1DC,gBAAAA,cA5D0D,GA4DzC,IAAIL,iCAAJ,CACtBI,SADsB,EAEtB5B,OAFsB,EAGtB2B,QAHsB,CA5DyC;AAAA;AAAA,uBAiEzCE,cAAc,CAACJ,UAAf,EAjEyC;;AAAA;AAiE1DK,gBAAAA,QAjE0D;AAmE5DC,gBAAAA,OAnE4D,GAmElD,IAAIC,oBAAJ,CACbT,cADa,EAEbD,SAFa,EAGbb,QAAQ,CAACL,OAHI,EAIbsB,QAJa,EAKbX,QALa,CAnEkD;AA0E5DkB,gBAAAA,OA1E4D,GA0ElD,IAAID,oBAAJ,CACbH,cADa,EAEbD,SAFa,EAGb1B,QAAQ,CAACE,OAHI,EAIb0B,QAJa,EAKbH,QALa,CA1EkD;AAAA;AAAA,uBAiF7CO,gBAAKQ,wBAAL,CAA8BX,OAA9B,EAAuCE,OAAvC,CAjF6C;;AAAA;AAiF1D3D,gBAAAA,IAjF0D;AAkF1DiE,gBAAAA,QAlF0D,GAkF/C;AAChB3E,kBAAAA,IAAI,EAAJA,IADgB;AAEhBU,kBAAAA,IAAI,EAAJA,IAFgB;AAGhBoD,kBAAAA,QAAQ,EAARA,QAHgB;AAIhBI,kBAAAA,QAAQ,EAARA,QAJgB;AAKhBM,kBAAAA,IAAI,EAAE;AACLI,oBAAAA,QAAQ,EAAElE,IAAI,CAAC8D,IAAL,CAAUI,QADf;AAELH,oBAAAA,YAAY,EAAE/D,IAAI,CAAC8D,IAAL,CAAUC;AAFnB,mBALU;AAShBC,kBAAAA,IAAI,EAAE;AACLE,oBAAAA,QAAQ,EAAElE,IAAI,CAACgE,IAAL,CAAUE,QADf;AAELH,oBAAAA,YAAY,EAAE/D,IAAI,CAACgE,IAAL,CAAUD;AAFnB;AATU,iBAlF+C;AAgGhE/C,gBAAAA,MAAM,CAAC,cAAD,EAAgBiD,QAAhB,CAAN;AACA/C,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;AAjGgE;AAAA,uBAkG1Db,QAAQ,CAAC,gBAAD,EAAkB5B,IAAlB,CAlGkD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsGjE,KA/OO;AAgPF+E,IAAAA,cAhPE,kCAgPyC/E,IAhPzC,EAgP+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC0B,gBAAAA,MAAiC,UAAjCA,MAAiC,EAAzB5B,OAAyB,UAAzBA,OAAyB,EAAjB8B,QAAiB,UAAjBA,QAAiB;AAChDoD,gBAAAA,WADgD,GACpClF,OAAO,CAAC,gBAAD,CAAP,CAA0BE,IAA1B,CADoC;AAAA;AAAA,uBAE/BgF,WAAW,CAACC,aAAZ,CACtB,GADsB,EAEtB,UAFsB,EAGtB,UAHsB,EAItB,CAJsB,EAKtB,SALsB,CAF+B;;AAAA;AAEhDC,gBAAAA,QAFgD;AAShDC,gBAAAA,WATgD;AAUrDnF,kBAAAA,IAAI,EAAJA;AAVqD,mBAWlDkF,QAXkD;AAatDxD,gBAAAA,MAAM,CAAC,iBAAD,EAAmByD,WAAnB,CAAN;AACAvD,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;AACAb,gBAAAA,QAAQ,CAAC,YAAD,EAAc5B,IAAd,CAAR;;AAfsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBtD,KAhQO;AAiQFoF,IAAAA,UAjQE,8BAiQmCpF,IAjQnC,EAiQyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B0B,gBAAAA,MAA+B,UAA/BA,MAA+B,EAAxB5B,OAAwB,UAAxBA,OAAwB,EAAhB8B,QAAgB,UAAhBA,QAAgB;AAC1CoD,gBAAAA,WAD0C,GAC9BlF,OAAO,CAAC,gBAAD,CAAP,CAA0BE,IAA1B,CAD8B;AAEhD0B,gBAAAA,MAAM,CAAC,aAAD,EAAe1B,IAAf,CAAN;AACA4B,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;AACAb,gBAAAA,QAAQ,CAAC,aAAD,EAAe5B,IAAf,EAAoBgF,WAApB,EACR;AAAEK,kBAAAA,IAAI,EAAE,CAAR;AAAWC,kBAAAA,UAAU,EAAE,KAAvB;AAA8BC,kBAAAA,SAAS,EAAE;AAAzC,iBADQ,CAAR;;AAJgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhD,KAvQO;AAwQFC,IAAAA,WAxQE,+BAwQmBxF,IAxQnB,EAwQyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd0B,gBAAAA,MAAc,UAAdA,MAAc;AAChCA,gBAAAA,MAAM,CAAC,cAAD,EAAgB1B,IAAhB,CAAN;;AADgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhC,KA1QO;AA2QFyF,IAAAA,WA3QE,uCA2QgE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAApD3F,gBAAAA,OAAoD,UAApDA,OAAoD,EAA5C4B,MAA4C,UAA5CA,MAA4C,EAArCE,QAAqC,UAArCA,QAAqC;AAAvB5B,gBAAAA,IAAuB,UAAvBA,IAAuB,EAAjBU,IAAiB,UAAjBA,IAAiB,EAAXgF,OAAW,UAAXA,OAAW;AACnElF,gBAAAA,OADmE,GAC3DV,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAtB,CAD2D;AAEnE2F,gBAAAA,SAFmE,uBAEvDnF,OAAO,CAACe,OAF+C,+DAEpC,EAFoC;;AAAA;AAAA,qBAGhEzB,OAAO,CAAC,YAAD,CAAP,CAAsBE,IAAtB,EAA4BkB,OAHoC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAMnDR,IAAI,CAACkF,2BAAL,CAAiCD,SAAjC,EAA4C,CAA5C,EAA+C,CAA/C,CANmD;;AAAA;AAMrEA,gBAAAA,SANqE;AAOrEjE,gBAAAA,MAAM,CAAC,sBAAD,EAAyB;AAAC1B,kBAAAA,IAAI,EAAJA,IAAD;AAAMuB,kBAAAA,OAAO,EAAEoE;AAAf,iBAAzB,CAAN;AACA/D,gBAAAA,QAAQ,CAAC,8BAAD,EAAgC9B,OAAO,CAAC,aAAD,CAAvC,EAAuD;AAAC2C,kBAAAA,IAAI,EAAC;AAAN,iBAAvD,CAAR;AARqE;AAAA,uBAS/D/B,IAAI,CAACmF,mBAAL,CAAyB,GAAzB,EAA8BH,OAAO,CAACJ,UAAtC,CAT+D;;AAAA;AAAA;AAAA,uBAU/D5E,IAAI,CAACmF,mBAAL,CAAyB,GAAzB,EAA8BH,OAAO,CAACH,SAAtC,CAV+D;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYrEO,gBAAAA,OAAO,CAAC/C,KAAR;;AAZqE;AAAA;AAAA,uBAchE,kBAAM2C,OAAO,CAACL,IAAR,GAAe,IAArB,CAdgE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBvE;AA3RO;AAjDK,C","sourcesContent":["import StarportSigningClient from \"./lib/starportSigningClient\";\nimport SpVuexError from '../../../errors/SpVuexError'\nimport { Endpoint, IbcClient, Link } from \"./ts-relayer\";\nimport { Registry, DirectSecp256k1HdWallet } from \"@cosmjs/proto-signing\";\nimport { stringToPath } from \"@cosmjs/crypto\";\nimport { sleep } from \"@cosmjs/utils\";\nimport { GasPrice } from \"@cosmjs/launchpad\";\nimport { defaultRegistryTypes } from \"@cosmjs/stargate\";\nimport { Tendermint34Client } from \"@cosmjs/tendermint-rpc\";\nimport { MsgTransfer } from \"./ts-relayer/codec/ibc/applications/transfer/v1/tx\";\nimport {\n  MsgAcknowledgement,\n  MsgChannelOpenAck,\n  MsgChannelOpenConfirm,\n  MsgChannelOpenInit,\n  MsgChannelOpenTry,\n  MsgRecvPacket,\n  MsgTimeout,\n} from \"./ts-relayer/codec/ibc/core/channel/v1/tx\";\nimport {\n  MsgCreateClient,\n  MsgUpdateClient,\n} from \"./ts-relayer/codec/ibc/core/client/v1/tx\";\nimport {\n  MsgConnectionOpenAck,\n  MsgConnectionOpenConfirm,\n  MsgConnectionOpenInit,\n  MsgConnectionOpenTry,\n} from \"./ts-relayer/codec/ibc/core/connection/v1/tx\";\n\nfunction ibcRegistry() {\n  return new Registry([\n    ...defaultRegistryTypes,\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\n      \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n      MsgConnectionOpenConfirm,\n    ],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n  ]);\n}\n\nexport default {\n\tnamespaced: true,\n\tstate() {\n\t\treturn {\n\t\t\trelayers:JSON.parse(window.localStorage.getItem('relayers')) || [],\n\t\t\ttransientLog: {\n\t\t\t\tmsg: ''\n\t\t\t},\n\t\t\trelayerLinks:{}\n\t\t}\n\t},\n\tgetters: {\n\t\tgetRelayer: (state) => (name) => {\n\t\t\treturn state.relayers.find(x => x.name==name)\n\t\t},\n\t\tgetRelayers: (state) => state.relayers,\n\t\tgetRelayerLink: (state) => (name) => {\n\t\t\treturn state.relayerLinks[name]\n\t\t}\n\t},\n\tmutations: {\n\t\tSET_RELAYERS(state,relayers) {\n\t\t\tstate.relayers=relayers\n\t\t},\n\t\tCREATE_RELAYER(state,relayer) {\n\t\t\tstate.relayers = [...state.relayers,relayer]\n\t\t},\n\t\tLINK_RELAYER(state,{name, link, ...linkDetails}) {\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\n\t\t\tstate.relayers[relayerIndex]={status: 'linked', ...state.relayers[relayerIndex],...linkDetails}\n\t\t\tstate.relayerLinks[name]=link\n\t\t},\n\t\tCONNECT_RELAYER(state, {name, ...channelDetails}) {\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\n\t\t\tstate.relayers[relayerIndex]={status: 'connected', ...state.relayers[relayerIndex],...channelDetails}\n\t\t},\n\t\tRUN_RELAYER(state, name) {        \n\t\t\tstate.relayers.find(x => x.name==name).running=true\n\t\t},\n\t\tSTOP_RELAYER(state, name) {\n\t\t\tstate.relayers.find(x => x.name==name).running=false\n\t\t},\n\t\tSET_LOG_MSG(state, msg) {\n\t\t\tstate.transientLog.message=msg\n\t\t},\n\t\tLAST_QUERIED_HEIGHTS(state, {name,heights}) {\n\t\t\tstate.relayers.find(x => x.name==name).heights=heights\n\t\t}\n\t},\n\tactions: {\n\t\tinit({commit,rootGetters,dispatch}) {\n\t\t\tconst relayers=rootGetters['common/wallet/relayers']\n\t\t\tcommit('SET_RELAYERS',relayers)\n\t\t\trelayers.forEach((relayer)=> {\n\t\t\t\tif (relayer.status=='linked' || relayer.status=='connected') {\n\t\t\t\t\tdispatch('loadRelayer',relayer.name)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tasync createRelayer({commit, rootGetters, dispatch},{ name, prefix, endpoint, gasPrice}) {\n\t\t\tlet relayer = {\n\t\t\t\tname,prefix,endpoint,gasPrice,\n\t\t\t\tstatus: \"created\",\n\t\t\t\theights: {},\n\t\t\t\trunning: false\n\t\t\t}\n\n\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\n\t\t\t\tprefix\n\t\t\t);\n\t\t\tconst [accountB] = await signerB.getAccounts();\n\t\t\trelayer.targetAddress=accountB.address\n\t\t\tcommit('CREATE_RELAYER',relayer)\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t},\n\t\tasync loadRelayer({commit, rootGetters, getters,dispatch},{name}) {\n\t\t\tconst relayer=getters['getRelayer'](name)\n\t\t\tif (relayer.status!=='linked' && relayer.status!=='connected') {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'relayers:connectRelayer',\n\t\t\t\t\t'Relayer already connected.'\n\t\t\t\t)\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\n\t\t\t\trootGetters['common/env/addrPrefix']\n\t\t\t\t);\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\n\t\t\t\trelayer.prefix\n\t\t\t\t);\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\n\t\t\t\tconst  transientLog = {\n\t\t\t\t\tinfo: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\n\t\t\t\t\t},\n\t\t\t\t\terror: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\twarn: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\tverbose: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\tdebug: () => {\n\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tconst optionsA = {\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(\"0.00000025token\"),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t};\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\n\t\t\t\t\trootGetters['common/env/apiTendermint']\n\t\t\t\t);\n\t\t\t\tconst signingClientA = new StarportSigningClient(\n\t\t\t\t\ttmClientA,\n\t\t\t\t\tsignerA,\n\t\t\t\t\toptionsA\n\t\t\t\t);\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\n\t\t\t\tconst optionsB = {\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t};\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\n\t\t\t\t\trelayer.endpoint\n\t\t\t\t);\n\t\t\t\tconst signingClientB = new StarportSigningClient(\n\t\t\t\t\ttmClientB,\n\t\t\t\t\tsignerB,\n\t\t\t\t\toptionsB\n\t\t\t\t);\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\n\t\t\n\t\t\t\tlet clientA = new IbcClient(\n\t\t\t\t\tsigningClientA,\n\t\t\t\t\ttmClientA,\n\t\t\t\t\taccountA.address,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\toptionsA\n\t\t\t\t);\n\t\t\t\tlet clientB = new IbcClient(\n\t\t\t\t\tsigningClientB,\n\t\t\t\t\ttmClientB,\n\t\t\t\t\taccountB.address,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\toptionsB\n\t\t\t\t);\n\t\t\t\tconst link = await Link.createWithExistingConnections(clientA, clientB,relayer.endA.connectionID,relayer.endB.connectionID)\n\t\t\t\tconst linkData = {\n\t\t\t\t\tname,\n\t\t\t\t\tlink,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\tendA: {\n\t\t\t\t\t\tclientID: link.endA.clientID,\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\n\t\t\t\t\t},\n\t\t\t\t\tendB: {\n\t\t\t\t\t\tclientID: link.endB.clientID,\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcommit('LINK_RELAYER',linkData)\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t\t\tif (relayer.status!='connected') {\n\t\t\t\t\tawait dispatch('connectRelayer',relayer.name)\n\t\t\t\t}else{\n\t\t\t\t\tif (relayer.running) {\n\t\t\t\t\t\tdispatch('runRelayer',relayer.name)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}catch(e) {\n\n\t\t\t}\n\t\t},\n\t\tasync linkRelayer({commit, rootGetters, getters,dispatch},{name}) {\n\t\t\tconst relayer=getters['getRelayer'](name)\n\t\t\tif (relayer.status!=='created') {\n\t\t\t\tthrow new SpVuexError(\n\t\t\t\t\t'relayers:connectRelayer',\n\t\t\t\t\t'Relayer already connected.'\n\t\t\t\t)\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\n\t\t\t\trootGetters['common/env/addrPrefix']\n\t\t\t\t);\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\n\t\t\t\trelayer.prefix\n\t\t\t\t);\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\n\t\t\t\tconst  transientLog = {\n\t\t\t\t\tinfo: (msg) => {\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\n\t\t\t\t\t},\n\t\t\t\t\terror: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\twarn: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\tverbose: () => {\n\n\t\t\t\t\t},\n\t\t\t\t\tdebug: () => {\n\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tconst optionsA = {\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(\"0.00000025token\"),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t};\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\n\t\t\t\t\trootGetters['common/env/apiTendermint']\n\t\t\t\t);\n\t\t\t\tconst signingClientA = new StarportSigningClient(\n\t\t\t\t\ttmClientA,\n\t\t\t\t\tsignerA,\n\t\t\t\t\toptionsA\n\t\t\t\t);\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\n\t\t\t\tconst optionsB = {\n\t\t\t\t\tprefix: relayer.prefix,\n\t\t\t\t\tlogger: transientLog,\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\n\t\t\t\t\tregistry: ibcRegistry(),\n\t\t\t\t};\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\n\t\t\t\t\trelayer.endpoint\n\t\t\t\t);\n\t\t\t\tconst signingClientB = new StarportSigningClient(\n\t\t\t\t\ttmClientB,\n\t\t\t\t\tsignerB,\n\t\t\t\t\toptionsB\n\t\t\t\t);\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\n\t\t\n\t\t\t\tlet clientA = new IbcClient(\n\t\t\t\t\tsigningClientA,\n\t\t\t\t\ttmClientA,\n\t\t\t\t\taccountA.address,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\toptionsA\n\t\t\t\t);\n\t\t\t\tlet clientB = new IbcClient(\n\t\t\t\t\tsigningClientB,\n\t\t\t\t\ttmClientB,\n\t\t\t\t\taccountB.address,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\toptionsB\n\t\t\t\t);\n\t\t\t\tconst link = await Link.createWithNewConnections(clientA, clientB);\n\t\t\t\tconst linkData = {\n\t\t\t\t\tname,\n\t\t\t\t\tlink,\n\t\t\t\t\tchainIdA,\n\t\t\t\t\tchainIdB,\n\t\t\t\t\tendA: {\n\t\t\t\t\t\tclientID: link.endA.clientID,\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\n\t\t\t\t\t},\n\t\t\t\t\tendB: {\n\t\t\t\t\t\tclientID: link.endB.clientID,\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcommit('LINK_RELAYER',linkData)\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t\t\tawait dispatch('connectRelayer',name)\n\t\t\t}catch(e) {\n\n\t\t\t}\n\t\t},\n\t\tasync connectRelayer({commit, getters,dispatch}, name) {\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\n\t\t\tconst channels = await relayerLink.createChannel(\n\t\t\t\t\"A\",\n\t\t\t\t\"transfer\",\n\t\t\t\t\"transfer\",\n\t\t\t\t1,\n\t\t\t\t\"ics20-1\"\n\t\t\t);\n\t\t\tconst channelData = {\n\t\t\t\tname,\n\t\t\t\t...channels\n\t\t\t}\n\t\t\tcommit(\"CONNECT_RELAYER\",channelData)\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t\tdispatch('runRelayer',name)\n\t\t},\n\t\tasync runRelayer({commit,getters,dispatch},name) {\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\n\t\t\tcommit(\"RUN_RELAYER\",name)\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t\tdispatch('relayerLoop',name,relayerLink,\n\t\t\t{ poll: 1, maxAgeDest: 86400, maxAgeSrc: 86400 })\n\t\t},\n\t\tasync stopRelayer({commit},name) {\n\t\t\tcommit(\"STOP_RELAYER\",name)\n\t\t},\n\t\tasync relayerLoop({ getters,commit,dispatch }, { name, link, options }) {\n\t\t\tlet relayer=getters['getRelayer'](name)\n\t\t\tlet nextRelay = relayer.heights ?? {};\n\t\t\twhile (getters['getRelayer'](name).running) {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: make timeout windows more configurable\n\t\t\t\t\tnextRelay = await link.checkAndRelayPacketsAndAcks(nextRelay, 2, 6);\n\t\t\t\t\tcommit(\"LAST_QUERIED_HEIGHTS\", {name,heights: nextRelay})\n\t\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\n\t\t\t\t\tawait link.updateClientIfStale(\"A\", options.maxAgeDest);\n\t\t\t\t\tawait link.updateClientIfStale(\"B\", options.maxAgeSrc);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(`Caught error: `, e);\n\t\t\t\t}\n\t\t\t\tawait sleep(options.poll * 1000);\n\t\t\t}\n\t\t}\n\t}\n}"],"file":"relayers.js"}