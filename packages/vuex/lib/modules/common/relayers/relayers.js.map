{"version":3,"sources":["../../../../src/modules/common/relayers/relayers.js"],"names":["ibcRegistry","Registry","defaultRegistryTypes","MsgCreateClient","MsgUpdateClient","MsgConnectionOpenInit","MsgConnectionOpenTry","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgChannelOpenInit","MsgChannelOpenTry","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgRecvPacket","MsgAcknowledgement","MsgTimeout","MsgTransfer","getDefaultState","relayers","transientLog","msg","relayerLinks","state","namespaced","getters","getRelayer","name","find","x","getRelayers","getRelayerLink","log","mutations","RESET_STATE","Object","assign","SET_RELAYERS","CREATE_RELAYER","relayer","LINK_RELAYER","link","linkDetails","relayerIndex","findIndex","status","CONNECT_RELAYER","channelDetails","RUN_RELAYER","running","STOP_RELAYER","SET_LOG_MSG","LAST_QUERIED_HEIGHTS","heights","actions","init","commit","rootGetters","dispatch","forEach","createRelayer","prefix","endpoint","gasPrice","DirectSecp256k1HdWallet","fromMnemonic","signerB","getAccounts","accountB","targetAddress","address","root","loadRelayer","SpVuexError","signerA","accountA","info","error","warn","verbose","debug","optionsA","logger","GasPrice","fromString","registry","Tendermint34Client","connect","tmClientA","signingClientA","StarportSigningClient","getChainId","chainIdA","optionsB","tmClientB","signingClientB","chainIdB","clientA","IbcClient","clientB","Link","createWithExistingConnections","endA","connectionID","endB","linkData","clientID","console","linkRelayer","createWithNewConnections","connectRelayer","relayerLink","createChannel","channels","channelData","runRelayer","options","poll","maxAgeDest","maxAgeSrc","stopRelayer","relayerLoop","nextRelay","checkAndRelayPacketsAndAcks","updateClientIfStale"],"mappings":"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","sourcesContent":["import StarportSigningClient from \"./lib/starportSigningClient\";\r\nimport SpVuexError from '../../../errors/SpVuexError'\r\nimport { Endpoint, IbcClient, Link } from \"./ts-relayer\";\r\nimport { Registry, DirectSecp256k1HdWallet } from \"@cosmjs/proto-signing\";\r\nimport { stringToPath } from \"@cosmjs/crypto\";\r\nimport { sleep } from \"@cosmjs/utils\";\r\nimport { GasPrice } from \"@cosmjs/launchpad\";\r\nimport { defaultRegistryTypes } from \"@cosmjs/stargate\";\r\nimport { Tendermint34Client } from \"@cosmjs/tendermint-rpc\";\r\nimport { MsgTransfer } from \"./ts-relayer/codec/ibc/applications/transfer/v1/tx\";\r\nimport {\r\n  MsgAcknowledgement,\r\n  MsgChannelOpenAck,\r\n  MsgChannelOpenConfirm,\r\n  MsgChannelOpenInit,\r\n  MsgChannelOpenTry,\r\n  MsgRecvPacket,\r\n  MsgTimeout,\r\n} from \"./ts-relayer/codec/ibc/core/channel/v1/tx\";\r\nimport {\r\n  MsgCreateClient,\r\n  MsgUpdateClient,\r\n} from \"./ts-relayer/codec/ibc/core/client/v1/tx\";\r\nimport {\r\n  MsgConnectionOpenAck,\r\n  MsgConnectionOpenConfirm,\r\n  MsgConnectionOpenInit,\r\n  MsgConnectionOpenTry,\r\n} from \"./ts-relayer/codec/ibc/core/connection/v1/tx\";\r\n\r\nfunction ibcRegistry() {\r\n  return new Registry([\r\n    ...defaultRegistryTypes,\r\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\r\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\r\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\r\n    [\r\n      \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\r\n      MsgConnectionOpenConfirm,\r\n    ],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\r\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\r\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\r\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\r\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\r\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\r\n  ]);\r\n}\r\nconst getDefaultState = () => {\r\n\treturn {\r\n\t\trelayers: [],\r\n\t\ttransientLog: {\r\n\t\t\tmsg: ''\r\n\t\t},\r\n\t\trelayerLinks:{}\r\n\t};\r\n};\r\n// initial state\r\nconst state = getDefaultState();\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate,\r\n\tgetters: {\r\n\t\tgetRelayer: (state) => (name) => {\r\n\t\t\treturn state.relayers.find(x => x.name==name)\r\n\t\t},\r\n\t\tgetRelayers: (state) => state.relayers,\r\n\t\tgetRelayerLink: (state) => (name) => {\r\n\t\t\treturn state.relayerLinks[name]\r\n\t\t},\r\n\t\tlog: (state)=> state.transientLog.msg\r\n\t},\r\n\tmutations: {\r\n\t\tRESET_STATE(state) {\r\n\t\t\t\tObject.assign(state, getDefaultState());\r\n\t\t},\r\n\t\tSET_RELAYERS(state,relayers) {\r\n\t\t\tstate.relayers=relayers\r\n\t\t},\r\n\t\tCREATE_RELAYER(state,relayer) {\r\n\t\t\tstate.relayers = [...state.relayers,relayer]\r\n\t\t},\r\n\t\tLINK_RELAYER(state,{name, link, ...linkDetails}) {\r\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\r\n\t\t\tstate.relayers[relayerIndex]={ ...state.relayers[relayerIndex],...linkDetails,status: 'linked',}\r\n\t\t\tstate.relayerLinks[name]=link\r\n\t\t},\r\n\t\tCONNECT_RELAYER(state, {name, ...channelDetails}) {\r\n\t\t\tlet relayerIndex = state.relayers.findIndex(x => x.name==name)\r\n\t\t\tstate.relayers[relayerIndex]={ ...state.relayers[relayerIndex],...channelDetails, status: 'connected'}\r\n\t\t},\r\n\t\tRUN_RELAYER(state, name) {        \r\n\t\t\tstate.relayers.find(x => x.name==name).running=true\r\n\t\t},\r\n\t\tSTOP_RELAYER(state, name) {\r\n\t\t\tstate.relayers.find(x => x.name==name).running=false\r\n\t\t},\r\n\t\tSET_LOG_MSG(state, msg) {\r\n\t\t\tstate.transientLog.msg=msg\r\n\t\t},\r\n\t\tLAST_QUERIED_HEIGHTS(state, {name,heights}) {\r\n\t\t\tstate.relayers.find(x => x.name==name).heights=heights\r\n\t\t}\r\n\t},\r\n\tactions: {\r\n\t\tinit({commit,rootGetters,dispatch}) {\r\n\t\t\tcommit('RESET_STATE')\r\n\t\t\tconst relayers=rootGetters['common/wallet/relayers']\r\n\t\t\tcommit('SET_RELAYERS',relayers)\r\n\t\t\trelayers.forEach((relayer)=> {\r\n\t\t\t\tif (relayer.status=='linked' || relayer.status=='connected') {\r\n\t\t\t\t\tdispatch('loadRelayer',relayer.name)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tasync createRelayer({commit, rootGetters, getters, dispatch},{ name, prefix, endpoint, gasPrice}) {\r\n\t\t\tlet relayer = {\r\n\t\t\t\tname,prefix,endpoint,gasPrice,\r\n\t\t\t\tstatus: \"created\",\r\n\t\t\t\theights: {},\r\n\t\t\t\trunning: false\r\n\t\t\t}\r\n\r\n\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\tprefix\r\n\t\t\t);\r\n\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\trelayer.targetAddress=accountB.address\r\n\t\t\tcommit('CREATE_RELAYER',relayer)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t},\r\n\t\tasync loadRelayer({commit, rootGetters, getters,dispatch},name) {\r\n\t\t\tconst relayer=getters['getRelayer'](name)\r\n\t\t\tif (relayer.status!=='linked' && relayer.status!=='connected') {\r\n\t\t\t\tthrow new SpVuexError(\r\n\t\t\t\t\t'relayers:connectRelayer',\r\n\t\t\t\t\t'Relayer already connected.'\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trootGetters['common/env/addrPrefix']\r\n\t\t\t\t);\r\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trelayer.prefix\r\n\t\t\t\t);\r\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\r\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\t\tconst  transientLog = {\r\n\t\t\t\t\tlog: (msg) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinfo: (msg) => {\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\twarn: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tverbose: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdebug: (msg) => {\r\n\r\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tconst optionsA = {\r\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(\"0.00000025token\"),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint']\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientA = new StarportSigningClient(\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\tsignerA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\r\n\t\t\t\tconst optionsB = {\r\n\t\t\t\t\tprefix: relayer.prefix,\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\r\n\t\t\t\t\trelayer.endpoint\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientB = new StarportSigningClient(\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\tsignerB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\r\n\t\t\r\n\t\t\t\tlet clientA = new IbcClient(\r\n\t\t\t\t\tsigningClientA,\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\taccountA.address,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tlet clientB = new IbcClient(\r\n\t\t\t\t\tsigningClientB,\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\taccountB.address,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst link = await Link.createWithExistingConnections(clientA, clientB,relayer.endA.connectionID,relayer.endB.connectionID)\r\n\t\t\t\tconst linkData = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tlink,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\tendA: {\r\n\t\t\t\t\t\tclientID: link.endA.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tendB: {\r\n\t\t\t\t\t\tclientID: link.endB.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcommit('LINK_RELAYER',linkData)\r\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\tif (relayer.status!='connected') {\r\n\t\t\t\t\tawait dispatch('connectRelayer',relayer.name)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif (relayer.running) {\r\n\t\t\t\t\t\tdispatch('runRelayer',relayer.name)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}catch(e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync linkRelayer({commit, rootGetters, getters,dispatch},{name}) {\r\n\t\t\tconst relayer=getters['getRelayer'](name)\r\n\t\t\tif (relayer.status!=='created') {\r\n\t\t\t\tthrow new SpVuexError(\r\n\t\t\t\t\t'relayers:connectRelayer',\r\n\t\t\t\t\t'Relayer already connected.'\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst signerA = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trootGetters['common/env/addrPrefix']\r\n\t\t\t\t);\r\n\t\t\t\tconst signerB = await DirectSecp256k1HdWallet.fromMnemonic(rootGetters['common/wallet/getMnemonic'],\r\n\t\t\t\tstringToPath(rootGetters['common/wallet/getPath']),\r\n\t\t\t\trelayer.prefix\r\n\t\t\t\t);\r\n\t\t\t\tconst [accountA] = await signerA.getAccounts();\r\n\t\t\t\tconst [accountB] = await signerB.getAccounts();\r\n\t\t\t\tconst  transientLog = {\r\n\t\t\t\t\tlog: (msg) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinfo: (msg) => {\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\twarn: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tverbose: (msg) => {\r\n\r\n\t\t\t\t\t\tcommit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdebug: (msg) => {\r\n\r\n\t\t\t\t\t\t//commit('SET_LOG_MSG',msg)\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t\tconst optionsA = {\r\n\t\t\t\t\tprefix: rootGetters['common/env/addrPrefix'],\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(\"0.00000025token\"),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientA = await Tendermint34Client.connect(\r\n\t\t\t\t\trootGetters['common/env/apiTendermint']\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientA = new StarportSigningClient(\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\tsignerA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdA = await signingClientA.getChainId();\r\n\t\t\t\tconst optionsB = {\r\n\t\t\t\t\tprefix: relayer.prefix,\r\n\t\t\t\t\tlogger: transientLog,\r\n\t\t\t\t\tgasPrice: GasPrice.fromString(relayer.gasPrice),\r\n\t\t\t\t\tregistry: ibcRegistry(),\r\n\t\t\t\t};\r\n\t\t\t\tconst tmClientB = await Tendermint34Client.connect(\r\n\t\t\t\t\trelayer.endpoint\r\n\t\t\t\t);\r\n\t\t\t\tconst signingClientB = new StarportSigningClient(\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\tsignerB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst chainIdB = await signingClientB.getChainId();\r\n\t\t\r\n\t\t\t\tlet clientA = new IbcClient(\r\n\t\t\t\t\tsigningClientA,\r\n\t\t\t\t\ttmClientA,\r\n\t\t\t\t\taccountA.address,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\toptionsA\r\n\t\t\t\t);\r\n\t\t\t\tlet clientB = new IbcClient(\r\n\t\t\t\t\tsigningClientB,\r\n\t\t\t\t\ttmClientB,\r\n\t\t\t\t\taccountB.address,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\toptionsB\r\n\t\t\t\t);\r\n\t\t\t\tconst link = await Link.createWithNewConnections(clientA, clientB);\r\n\t\t\t\tconst linkData = {\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tlink,\r\n\t\t\t\t\tchainIdA,\r\n\t\t\t\t\tchainIdB,\r\n\t\t\t\t\tendA: {\r\n\t\t\t\t\t\tclientID: link.endA.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endA.connectionID\r\n\t\t\t\t\t},\r\n\t\t\t\t\tendB: {\r\n\t\t\t\t\t\tclientID: link.endB.clientID,\r\n\t\t\t\t\t\tconnectionID: link.endB.connectionID\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcommit('LINK_RELAYER',linkData)\r\n\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\tawait dispatch('connectRelayer',name)\r\n\t\t\t}catch(e) {\r\n\t\t\t\tconsole.error(e)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync connectRelayer({commit, getters,dispatch}, name) {\r\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\r\n\t\t\tconst channels = await relayerLink.createChannel(\r\n\t\t\t\t\"A\",\r\n\t\t\t\t\"transfer\",\r\n\t\t\t\t\"transfer\",\r\n\t\t\t\t1,\r\n\t\t\t\t\"ics20-1\"\r\n\t\t\t);\r\n\t\t\tconst channelData = {\r\n\t\t\t\tname,\r\n\t\t\t\t...channels\r\n\t\t\t}\r\n\t\t\tcommit(\"CONNECT_RELAYER\",channelData)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\tdispatch('runRelayer',name)\r\n\t\t},\r\n\t\tasync runRelayer({commit,getters,dispatch},name) {\r\n\t\t\tconst relayerLink=getters['getRelayerLink'](name)\r\n\t\t\tcommit(\"RUN_RELAYER\",name)\r\n\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\tdispatch('relayerLoop',{name,link: relayerLink,\r\n\t\t\toptions: { poll: 1, maxAgeDest: 86400, maxAgeSrc: 86400 }})\r\n\t\t},\r\n\t\tasync stopRelayer({commit},name) {\r\n\t\t\tcommit(\"STOP_RELAYER\",name)\r\n\t\t},\r\n\t\tasync relayerLoop({ getters,commit,dispatch }, { name, link, options }) {\r\n\t\t\tlet relayer=getters['getRelayer'](name)\r\n\t\t\tlet nextRelay = relayer.heights ?? {};\r\n\t\t\twhile (getters['getRelayer'](name).running) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// TODO: make timeout windows more configurable\r\n\t\t\t\t\tnextRelay = await link.checkAndRelayPacketsAndAcks(nextRelay, 2, 6);\r\n\t\t\t\t\tcommit(\"LAST_QUERIED_HEIGHTS\", {name,heights: nextRelay})\r\n\t\t\t\t\tdispatch('common/wallet/updateRelayers',getters['getRelayers'],{root:true})\r\n\t\t\t\t\tawait link.updateClientIfStale(\"A\", options.maxAgeDest);\r\n\t\t\t\t\tawait link.updateClientIfStale(\"B\", options.maxAgeSrc);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(`Caught error: `, e);\r\n\t\t\t\t}\r\n\t\t\t\tawait sleep(options.poll * 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],"file":"relayers.js"}